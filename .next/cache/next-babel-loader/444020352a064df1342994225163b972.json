{"ast":null,"code":"var toParagraph = function toParagraph(text) {\n  var textArr = text.split('\\n');\n  var newText = textArr.forEach(function (p) {\n    return \"<p>\".concat(p, \"</p>\");\n  });\n  console.log(newText); // return newText.join(',');\n};\n\nexport default toParagraph;","map":{"version":3,"sources":["/Users/brunao/PROJECTS/Axiom-Apps/axiomsites/utils/paragraphFormatter.js"],"names":["toParagraph","text","textArr","split","newText","forEach","p","console","log"],"mappings":"AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AAC1B,MAAIC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAd;AAEA,MAAIC,OAAO,GAAGF,OAAO,CAACG,OAAR,CAAgB,UAAAC,CAAC,EAAI;AACjC,wBAAaA,CAAb;AACD,GAFa,CAAd;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAP0B,CAS1B;AACD,CAVD;;AAYA,eAAeJ,WAAf","sourcesContent":["const toParagraph = text => {\n  let textArr = text.split('\\n');\n\n  let newText = textArr.forEach(p => {\n    return `<p>${p}</p>`;\n  });\n\n  console.log(newText);\n\n  // return newText.join(',');\n}\n\nexport default toParagraph;"]},"metadata":{},"sourceType":"module"}